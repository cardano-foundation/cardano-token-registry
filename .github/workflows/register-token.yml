name: Register Token on Cardano Token Registry

on:
  workflow_dispatch:
    inputs:
      token_name:
        description: "The name of the token"
        required: true
      token_symbol:
        description: "The symbol of the token"
        required: true
      token_description:
        description: "A description of the token"
        required: true
      token_website_url:
        description: "The website URL of the token"
        required: false
      token_logo_ipfs_link:
        description: "The IPFS link to the token logo"
        required: false
      asset_id:
        description: "The asset ID of the token"
        required: true
      policy_id:
        description: "The policy ID of the token"
        required: true

jobs:
  register_token:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Install offchain-metadata-tools
        run: |
          sudo apt-get update
          sudo apt-get install -y xxd
          wget https://github.com/input-output-hk/offchain-metadata-tools/releases/download/v0.4.0.0/token-metadata-creator.tar.gz
          tar -xzf token-metadata-creator.tar.gz
          mkdir -p ~/.local/bin
          mv ./token-metadata-creator ~/.local/bin/token-metadata-creator
          export PATH=$PATH:~/.local/bin
          echo "Checking if token-metadata-creator is available:"
          which token-metadata-creator

      - name: Download and validate logo
        if: ${{ inputs.token_logo_ipfs_link }}
        run: |
          wget -O token_logo.png "${{ inputs.token_logo_ipfs_link }}"
          
          # Check if the file is a valid PNG
          file_type=$(file --mime-type -b token_logo.png)
          if [ "$file_type" != "image/png" ]; then
            echo "Token logo must be a PNG file."
            exit 1
          fi

          # Convert the image to a base64-encoded bytestring
          logo_bytestring=$(base64 -w 0 token_logo.png)
          echo $logo_bytestring > logo_bytestring.txt

      - name: Prepare and register token
        run: |
          subject="${{ inputs.asset_id }}"
          
          # Create draft entry
          token-metadata-creator entry --init $subject

          # Add required fields
          token-metadata-creator entry $subject \
            --name "${{ inputs.token_name }}" \
            --description "${{ inputs.token_description }}" \

          # Add optional fields (ticker, url, logo)
          token-metadata-creator entry $subject \
            --ticker "${{ inputs.token_symbol }}" \
            --url "${{ inputs.token_website_url }}"

          if [ -f token_logo.png ]; then
            echo "Adding logo"
            token-metadata-creator entry $subject --logo "token_logo.png"
          fi

          # Finalize entry
          token-metadata-creator entry $subject --finalize

          echo "Listing files after finalizing token metadata:"
          ls -l

          # Move the JSON file to the mappings directory
          mv "${subject}.json" mappings/

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install gh
      
      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            gh auth setup-git
            gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Push to the registry
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          
          # Add the file to Git
          git add mappings/"${{ inputs.asset_id }}.json"
          
          # Commit the changes with a dynamic commit message
          git commit -m "Register ${{ inputs.token_name }}"
          
          # Push the changes to the current branch (HEAD)
          git push origin HEAD

      - name: Create Pull Request to Parent Repo
        run: |
          gh pr create \
            --title "Register ${{ inputs.token_name }}" \
            --body $'\
                  # Pull Request Template\n\n\
                  ## Description\n\
                  Please include a short summary of the changes in this PR.\n\n\
                  ## Type of change\n\
                  - [x] Metadata related change\n\
                  - [ ] Other\n\n\
                  ## Checklist:\n\
                  - [x] For metadata related changes, this PR code passes the GitHub Actions metadata validation\n\n\
                  ## Metadata PRs\n\
                  Please note it may take up to 4 hours for merged changes to take effect on the metadata server.' \
            --base master \
            --head tabdon:master \
            --repo cardano-foundation/cardano-token-registry
